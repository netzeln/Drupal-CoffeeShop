<?php

function queen_attack_menu() {
    $items = array();
    $items['queen_attack'] = array(
      'title' => 'Queen Attack',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('queen_attack_form'),
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM,
    );
    $items['queen_attack_success_page'] = array(
      'title' => 'Results',
      'page callback' => 'queen_attack_success',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
    return $items;
}

function queen_attack_form() {
    $form['queen_x_position'] = array(
        '#title' => 'Queen X Position',
        '#type' => 'textfield',
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_queen_x_range'),
        '#required' =>TRUE,
        '#description' => t("Enter the Queen's X coordinate"),
    );
    $form['queen_y_position'] = array(
        '#title' => 'Queen Y Position',
        '#type' => 'textfield',
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_queen_y_range'),
        '#required' =>TRUE,
        '#description' => t("Enter the Queen's Y coordinate"),
    );
    $form['target_x_position'] = array(
        '#title' => 'Target X Position',
        '#type' => 'textfield',
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_target_x_range'),
        '#required' =>TRUE,
        '#description' => t("Enter the Target's X coordinate"),
    );
    $form['target_y_position'] = array(
        '#title' => 'Target Y Position',
        '#type' => 'textfield',
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_target_y_range'),
        '#required' =>TRUE,
        '#description' => t("Enter the Target's Y coordinate"),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Attack!',
    );

    return $form;
}

// function queen_attack_form_validate($form, &$form_state) {
//     if($form_state['values']['queen_x_position'] < 1 || $form_state['values']['queen_x_position'] > 8) {
//         form_set_error('queen_x_position', 'incorrect position!');
//     } elseif ($form_state['values']['target_x_position'] < 1 || $form_state['values']['target_x_position'] > 8) {
//         form_set_error('target_x_position', 'incorrect position!');
//     } elseif ($form_state['values']['queen_y_position'] < 1 || $form_state['values']['queen_y_position'] > 8) {
//         form_set_error('queen_y_position', 'incorrect position!');
//     } elseif ($form_state['values']['target_y_position'] < 1 || $form_state['values']['target_y_position'] > 8) {
//         form_set_error('target_y_position', 'incorrect position!');
//     }
// }

function element_validate_queen_x_range($element) {
  if($element['#value'] < 1 || $element['#value'] > 8) {
    form_set_error('queen_x_position', t('Incorrect Queen X position!'));
  }
}

function element_validate_queen_y_range($element) {
  if($element['#value'] < 1 || $element['#value'] > 8) {
    form_set_error('queen_y_position', t('Incorrect Queen Y position!'));
  }
}

function element_validate_target_x_range($element) {
  if($element['#value'] < 1 || $element['#value'] > 8) {
    form_set_error('target_x_position', t('Incorrect Target X position!'));
  }
}

function element_validate_target_y_range($element) {
  if($element['#value'] < 1 || $element['#value'] > 8) {
    form_set_error('target_y_position', t('Incorret Target Y position!'));
  }
}

function queen_attack_form_submit($form, &$form_state) {
    $queen_x = $form_state['values']['queen_x_position'];
    $queen_y = $form_state['values']['queen_y_position'];
    $target_x = $form_state['values']['target_x_position'];
    $target_y = $form_state['values']['target_y_position'];
    $queen_attack_output = '';

    if ($queen_x == $target_x || $queen_y == $target_y || abs($queen_x - $target_x) == abs($queen_y - $target_y)) {
        $queen_attack_output = 'Queen attacked and destroyed target.';
    } else {
        $queen_attack_output = 'Queen cannot attack target.';
    }

    $_SESSION['queen_attack_output'] = $queen_attack_output;
    $form_state['redirect'] = 'queen_attack_success_page';
}

function queen_attack_success() {
    $output = $_SESSION['queen_attack_output'];
    return $output;
}
